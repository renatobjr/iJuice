version: "3"

name: "ijuice"

networks:
  net-customer-services:
    driver: bridge

  net-order-services:
    driver: bridge

  net-vendor-machines:
    driver: bridge

  net-rabbit-mq:
    driver: bridge

services:
  # Message Brokers
  rabbit-mq:
    image: rabbitmq:4.0-rc-management
    container_name: rabbit-mq
    hostname: rabbit-mq
    ports:
      - 5672:5672 # AMQP Port
      - 15672:15672 # Management Port
    volumes:
      - ./app/api/rabbitmq/data:/var/lib/rabbitmq
      - ./app/api/rabbitmq/logs:/var/log/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - net-rabbit-mq

  # Databases
  vendor-db:
    image: mongo:7.0.0
    container_name: vendor-db
    ports:
      - 27017:27017
    volumes:
      - ./app/vendor/mongo/:/data/db:rw
    env_file:
      - ./envs/db/db.vendor.env
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.serverStatus().ok == 1"]
      interval: 10s
      timeout: 30s
      retries: 3
      start_period: 30s
    networks:
      - net-vendor-machines

  order-db:
    container_name: "order-db"
    image: mysql:8.4.0
    ports:
      - 3307:3306
    volumes:
      - ./app/api/order/data/mysql:/var/lib/mysq:rw
    env_file:
      - ./envs/db/db.order.env
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 30s
      retries: 3
    networks:
      - net-order-services

  customer-db:
    container_name: "customer-db"
    image: mysql:8.4.0
    ports:
      - 3306:3306
    volumes:
      - ./app/api/customer/data/mysql:/var/lib/mysq:rw
    env_file:
      - ./envs/db/db.customer.env
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 30s
      retries: 3
    networks:
      - net-customer-services
